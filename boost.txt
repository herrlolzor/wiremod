@name boost
@inputs On
@outputs Results F:array
@outputs 
@persist 
@trigger 
if (first()) {
    findIncludeModel("models/airboat.mdl")
    findExcludeClass("beam")
    findExcludeClass("point_spotlight")
    findExcludeClass("spotlight_end")
    findExcludeClass("func_button")
    findExcludeClass("func_door")
    findExcludeClass("path_track")
    findExcludeClass("lua_run")
    findExcludeClass("path_corner")
    findExcludeClass("func_brush")
    findExcludeClass("npc_heli_avoidbox")
    findExcludeClass("ambient_generic")
    findExcludeClass("trigger_multiple")
    findExcludeClass("vehicle")
    findExcludeClass("gmod_camera")
    findExcludeClass("hologram")
    findExcludeClass("gmod_tool")
    findExcludeClass("pist_weapon")
    findExcludeClass("ammo")
    findExcludeModel("weapon")
    findIncludeClass("prop")
    findIncludeClass("vehicle")
    Owner=owner()
    findIncludePlayerProps(Owner)
}
if (On) {
    interval(10)
    E=entity()
    Mypos=E:pos()
    Len=250

    Results=findInSphere(Mypos,Len)
    F = findToArray()
    for (I=1,F:count()) {
        Entity = F[I,entity]
        Velocity = Entity:vel()
        Entity:applyForce(Velocity*10)
    }

}
else{
    Results = 0
}

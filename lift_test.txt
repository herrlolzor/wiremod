@name wing
@inputs Wing:entity Wing2:entity Wing3:entity Wing4:entity
@outputs Area V VV:vector LV:vector FrontVel Front:vector AoA LiftForce WingForce
@persist 
@trigger 
# Wing2 optional
interval(10)

WingMul = 6
PropRotation = 0 # yaw rotation of prop

Area = sqrt(Wing:boxSize():x()*Wing:boxSize():y())
LV = Wing:velL()

VV = Wing:pos()+(Wing:vel())
FrontVel = abs(vec2(LV):rotate(PropRotation):x())
B = Wing:bearing(VV)
AoA = Wing:elevation(VV)

if (AoA>=30 | AoA<= -30) {LiftForce=0}
else {LiftForce = WingMul*sin(AoA*-6)}

WingForce = (FrontVel * WingMul)*LiftForce
WingForce2 = (FrontVel * (WingMul*4))*LiftForce

Wing:applyForce( Wing:up() * WingForce )
Wing2:applyForce( Wing2:up() * WingForce )
Wing3:applyForce( Wing3:up() * WingForce )
Wing4:applyForce( Wing4:up() * WingForce )

@name radar camera
@inputs On Res Rate Zoom Mem:wirelink LCD:wirelink
@outputs Inc XO YO D X Y End YC G Addr FindMin FindMax Avg
@persist X Y MinDepth MaxDepth FindMin FindMax YC End Go Sum C
#Rate is the number of times per second for full update
#For zoom, 1 = 90 degress, larger values equal small degress
#if it can't keep up then increase the value of Mult and
#copy paste the code block accordingly (to many and it just gets slower)
Range=25000
if (On==1) {Go=1
    End=0
    YC=0
    FindMax=Range * -1
    FindMin=Range
    Sum=0
    C=0
    }
if (Go==1) {
Mult = 16 #this is the number of copies of the scan code there is


if (Res == 0) {Res = 32}
if (Rate == 0) {Rate = 5}
if (Zoom == 0) {Zoom = 1}
#XO & YO are offsets
Inc = 1 / Res #increment between each offset
interval(1000 / Rate * Mult / Res ^ 2 )

#Start of repeating code block
rangerHitWater(1) 
#rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(Range, XO, YO)
D = R:distance()

if (YC==1) {G=255-(((D-FindMin)/FindMax)*255)}
else {
    if (D < FindMin) {FindMin = D}
    if (D > FindMax) {FindMax = D}
    G=255-((D/Range)*255)
    Sum+=D
    C+=1
    Avg=Sum/C}
if (X < 32 & Y < 32) {LCD:writeCell(X + Y * 32, G)}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    YC=YC+1
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    if (YC>=2) {End=1
        Go=0}
    else {End=0}
}
Addr=X + Y * Res
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
rangerHitWater(1) 
#rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(Range, XO, YO)
D = R:distance()

if (YC==1) {G=255-(((D-FindMin)/FindMax)*255)}
else {
    if (D < FindMin) {FindMin = D}
    if (D > FindMax) {FindMax = D}
    G=255-((D/Range)*255)
    Sum+=D
    C+=1
    Avg=Sum/C}
if (X < 32 & Y < 32) {LCD:writeCell(X + Y * 32, G)}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    YC=YC+1
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    if (YC>=2) {End=1
        Go=0}
    else {End=0}
}
Addr=X + Y * Res
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
rangerHitWater(1) 
#rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(Range, XO, YO)
D = R:distance()

if (YC==1) {G=255-(((D-FindMin)/FindMax)*255)}
else {
    if (D < FindMin) {FindMin = D}
    if (D > FindMax) {FindMax = D}
    G=255-((D/Range)*255)
    Sum+=D
    C+=1
    Avg=Sum/C}
if (X < 32 & Y < 32) {LCD:writeCell(X + Y * 32, G)}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    YC=YC+1
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    if (YC>=2) {End=1
        Go=0}
    else {End=0}
}
Addr=X + Y * Res
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
rangerHitWater(1) 
#rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(Range, XO, YO)
D = R:distance()

if (YC==1) {G=255-(((D-FindMin)/FindMax)*255)}
else {
    if (D < FindMin) {FindMin = D}
    if (D > FindMax) {FindMax = D}
    G=255-((D/Range)*255)
    Sum+=D
    C+=1
    Avg=Sum/C}
if (X < 32 & Y < 32) {LCD:writeCell(X + Y * 32, G)}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    YC=YC+1
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    if (YC>=2) {End=1
        Go=0}
    else {End=0}
}
Addr=X + Y * Res
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
rangerHitWater(1) 
#rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(Range, XO, YO)
D = R:distance()

if (YC==1) {G=255-(((D-FindMin)/FindMax)*255)}
else {
    if (D < FindMin) {FindMin = D}
    if (D > FindMax) {FindMax = D}
    G=255-((D/Range)*255)
    Sum+=D
    C+=1
    Avg=Sum/C}
if (X < 32 & Y < 32) {LCD:writeCell(X + Y * 32, G)}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    YC=YC+1
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    if (YC>=2) {End=1
        Go=0}
    else {End=0}
}
Addr=X + Y * Res
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
rangerHitWater(1) 
#rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(Range, XO, YO)
D = R:distance()

if (YC==1) {G=255-(((D-FindMin)/FindMax)*255)}
else {
    if (D < FindMin) {FindMin = D}
    if (D > FindMax) {FindMax = D}
    G=255-((D/Range)*255)
    Sum+=D
    C+=1
    Avg=Sum/C}
if (X < 32 & Y < 32) {LCD:writeCell(X + Y * 32, G)}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    YC=YC+1
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    if (YC>=2) {End=1
        Go=0}
    else {End=0}
}
Addr=X + Y * Res
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
rangerHitWater(1) 
#rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(Range, XO, YO)
D = R:distance()

if (YC==1) {G=255-(((D-FindMin)/FindMax)*255)}
else {
    if (D < FindMin) {FindMin = D}
    if (D > FindMax) {FindMax = D}
    G=255-((D/Range)*255)
    Sum+=D
    C+=1
    Avg=Sum/C}
if (X < 32 & Y < 32) {LCD:writeCell(X + Y * 32, G)}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    YC=YC+1
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    if (YC>=2) {End=1
        Go=0}
    else {End=0}
}
Addr=X + Y * Res
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
rangerHitWater(1) 
#rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(Range, XO, YO)
D = R:distance()

if (YC==1) {G=255-(((D-FindMin)/FindMax)*255)}
else {
    if (D < FindMin) {FindMin = D}
    if (D > FindMax) {FindMax = D}
    G=255-((D/Range)*255)
    Sum+=D
    C+=1
    Avg=Sum/C}
if (X < 32 & Y < 32) {LCD:writeCell(X + Y * 32, G)}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    YC=YC+1
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    if (YC>=2) {End=1
        Go=0}
    else {End=0}
}
Addr=X + Y * Res
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
rangerHitWater(1) 
#rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(Range, XO, YO)
D = R:distance()

if (YC==1) {G=255-(((D-FindMin)/FindMax)*255)}
else {
    if (D < FindMin) {FindMin = D}
    if (D > FindMax) {FindMax = D}
    G=255-((D/Range)*255)
    Sum+=D
    C+=1
    Avg=Sum/C}
if (X < 32 & Y < 32) {LCD:writeCell(X + Y * 32, G)}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    YC=YC+1
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    if (YC>=2) {End=1
        Go=0}
    else {End=0}
}
Addr=X + Y * Res
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
rangerHitWater(1) 
#rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(Range, XO, YO)
D = R:distance()

if (YC==1) {G=255-(((D-FindMin)/FindMax)*255)}
else {
    if (D < FindMin) {FindMin = D}
    if (D > FindMax) {FindMax = D}
    G=255-((D/Range)*255)
    Sum+=D
    C+=1
    Avg=Sum/C}
if (X < 32 & Y < 32) {LCD:writeCell(X + Y * 32, G)}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    YC=YC+1
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    if (YC>=2) {End=1
        Go=0}
    else {End=0}
}
Addr=X + Y * Res
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
rangerHitWater(1) 
#rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(Range, XO, YO)
D = R:distance()

if (YC==1) {G=255-(((D-FindMin)/FindMax)*255)}
else {
    if (D < FindMin) {FindMin = D}
    if (D > FindMax) {FindMax = D}
    G=255-((D/Range)*255)
    Sum+=D
    C+=1
    Avg=Sum/C}
if (X < 32 & Y < 32) {LCD:writeCell(X + Y * 32, G)}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    YC=YC+1
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    if (YC>=2) {End=1
        Go=0}
    else {End=0}
}
Addr=X + Y * Res
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
rangerHitWater(1) 
#rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(Range, XO, YO)
D = R:distance()

if (YC==1) {G=255-(((D-FindMin)/FindMax)*255)}
else {
    if (D < FindMin) {FindMin = D}
    if (D > FindMax) {FindMax = D}
    G=255-((D/Range)*255)
    Sum+=D
    C+=1
    Avg=Sum/C}
if (X < 32 & Y < 32) {LCD:writeCell(X + Y * 32, G)}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    YC=YC+1
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    if (YC>=2) {End=1
        Go=0}
    else {End=0}
}
Addr=X + Y * Res
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
rangerHitWater(1) 
#rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(Range, XO, YO)
D = R:distance()

if (YC==1) {G=255-(((D-FindMin)/FindMax)*255)}
else {
    if (D < FindMin) {FindMin = D}
    if (D > FindMax) {FindMax = D}
    G=255-((D/Range)*255)
    Sum+=D
    C+=1
    Avg=Sum/C}
if (X < 32 & Y < 32) {LCD:writeCell(X + Y * 32, G)}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    YC=YC+1
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    if (YC>=2) {End=1
        Go=0}
    else {End=0}
}
Addr=X + Y * Res
#End of code block - repeat this for a total of 16 copies

}


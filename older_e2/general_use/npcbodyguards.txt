@name NPCbodyguards
@inputs Go NPC1:entity NPC2:entity NPC3:entity NPC4:entity
@outputs T
@persist T NPCL:table Vt:table
@trigger 
interval(250)
Owner = owner()
OwnerPos = Owner:pos()
NPCL=table(NPC1,NPC2,NPC3,NPC4)
Angle=45

P1a=45+Angle
P2a=135+Angle
P3a=225+Angle
P4a=315+Angle

D1=300
D2=300
D3=300
D4=300

P1x=D1*cos(P1a)
P1y=D1*sin(P1a)
P1v=vec(P1x,P1y,0)
P2x=D2*cos(P2a)
P2y=D2*sin(P2a)
P2v=vec(P2x,P2y,0)
P3x=D3*cos(P3a)
P3y=D3*sin(P3a)
P3v=vec(P3x,P3y,0)
P4x=D4*cos(P4a)
P4y=D4*sin(P4a)
P4v=vec(P4x,P4y,0)

P1=OwnerPos+P1v
P2=OwnerPos+P2v
P3=OwnerPos+P3v
P4=OwnerPos+P4v
Vt=table(P1,P2,P3,P4)

if (Go==1) {NPC=NPCL[T,entity]
    NPC:npcRelationship("player","neutral",900)
    NPC:npcRelationship(Owner,"like",999)
    DPos = NPC:pos() - Vt[T,vector]
    WalkPos = Vt[T,vector]
#This next bit stops the NPC from continually trying to run to spot it's standing in, 
#and also stops it being distracted while standing still
    if (DPos:length()>120) {NPC:npcGoRun(WalkPos)} else {NPC:npcStop()}
    T=T+1
    if (T>4) {T=0}
}

@name BProp Learner
@outputs A B
@persist N Err AE BE

if(first()){
    N=1
    gDeleteAllNum()
    A=entity():id()
    B=A*10
    holoCreate(1,entity():toWorld(vec(0,0,10)))
    holoCreate(2,entity():toWorld(vec(0,0,10)))
    holoScaleUnits(1,vec(3,3,10))
    holoScaleUnits(2,vec(3,3,1))
    holoAlpha(1,170)
    
    signalSend("Start",1)
}
interval(150)

if(N){
    BE=(gGetStr("Target"):toNumber()-gGetNum("NetOut"))^2
    gSetNum(A,0)
    gSetNum(B,1)
    gSetStr("Target","0")
}
else{
    AE=(gGetStr("Target"):toNumber()-gGetNum("NetOut"))^2
    gSetNum(A,1)
    gSetNum(B,1)
    gSetStr("Target","1")
}
N=!N

if(AE & BE){
    Err=round(AE+BE,2)
    Cap=min((1-Err),1)
    Cap=max(Cap,0)*10
    holoScaleUnits(2,vec(3,3,Cap))
}

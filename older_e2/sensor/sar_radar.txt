@name synthetic aperture radar
@inputs On Res Rate Zoom World Mem:wirelink LCD:wirelink
@outputs Inc XO YO D X Y Eid
@persist X Y MinDepth MaxDepth FindMin FindMax 
#Rate is the number of times per second for full update
#For zoom, 1 = 90 degress, larger values equal small degress
#if it can't keep up then increase the value of Mult and
#copy paste the code block accordingly (to many and it just gets slower)

if (On!=1) {reset()}
Mult = 16 #this is the number of copies of the scan code there is

if (Res == 0) {Res = 32}
if (Rate == 0) {Rate = 5}
if (Zoom == 0) {Zoom = 5}
#XO & YO are offsets
Inc = 2 / Res #increment between each offset
interval(1000 / Rate * Mult / Res ^ 2 )

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

#Start of repeating code block
if (World==1) {
    rangerIgnoreWorld(0)
    rangerHitWater(1) }
else {
    rangerIgnoreWorld(1)
    rangerHitWater(0) }
    
#rangerHitEntities(N) 
rangerDefaultZero(1) 
XO = (X * Inc - 1) / Zoom
YO = (Y * Inc - 1) / Zoom
R = ranger(50000, XO, YO)
Eid=R:entity():id()
D = R:distance()/10
if (D < FindMin) {FindMin = D}
if (D > FindMax) {FindMax = D}
if (X < 32 & Y < 32) {
    if (Eid==0) {LCD:writeCell(X + Y * 32, D - MinDepth / (MaxDepth - MinDepth) * 255)}
    else {LCD:writeCell(X + Y * 32, 50000)}
}
Mem:writeCell(X + Y * Res, D)
X++
if (X >= Res) {X = -1, Y++}
if (Y >= Res) {
    Y = -1
    MinDepth = FindMin
    MaxDepth = FindMax
    FindMin = D
    FindMax = D
}
#End of code block - repeat this for a total of 16 copies

@name target threat organizer
@inputs Go E:entity
@outputs 
@outputs 
@persist Dist Count ThreatMem:array
@persist D1 D2 D3 D4 D5 D6
@trigger 

interval(250)
Pos=entity():pos()

if (Go==1) {
    Tgt=Mem2[Count,vector]
    Dist=Pos:distance(Tgt)
    if (Tgt==vec(0,0,0)) {Count=Count+1}
    elseif (Mem1[Count,string]!="R.I.P") {
        if (Count==1) {D1=Dist}
        elseif (Count==2) {D2=Dist}
        elseif (Count==3) {D3=Dist}
        elseif (Count==4) {D4=Dist}
        elseif (Count==5) {D5=Dist}
        elseif (Count==6) {D6=Dist}
    }
    
C1=min(D1,D2,D3)
C2=min(D4,D5,D6)
Closest=

T1=Radar["1_Ent",entity]
T2=Radar["2_Ent",entity]
T3=Radar["3_Ent",entity]
T4=Radar["4_Ent",entity]
Threats=(Radar["1",number]+Radar["2",number]+Radar["3",number]+Radar["4",number])

E1=T1:pos()
E2=T2:pos()
E3=T3:pos()
E4=T4:pos()

L1=T1:isAlive()
L2=T2:isAlive()
L3=T3:isAlive()
L4=T4:isAlive()

if (L1==1) {D1=Pos:distance(E1)}
else {D1=999999}
if (L2==1) {D2=Pos:distance(E2)}
else {D2=999999}
if (L3==1) {D3=Pos:distance(E3)}
else {D3=999999}
if (L4==1) {D4=Pos:distance(E4)}
else {D4=999999}



    
if (D2<Dist & (D2 > D3) & (D2 > D4)) {Closest2=E2}
if (D3<Dist & (D3 > D2) & (D3 > D4)) {Closest2=E3}
if (D4<Dist & (D4 > D2) & (D4 > D3)) {Closest2=E4}
else {Closest2=E1}


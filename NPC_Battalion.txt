@name NPC Battalion
@inputs Go Quick FormNum Pos:vector NPCList:array SetNPCs
@outputs NPCID Dist WD WalkPos:vector C
@persist Vt:table C DoubleFile:table Column:table File:table NPCs:array
@trigger 
if (Go==1) {I=10}
else {I=500}

RegDist=70

if (first()) {
    DoubleFile=table(table(270,270,270,270,270,90,90,90,90,90,270,270,270,270,270,90,90,90,90,90),
        table(RegDist*5,RegDist*4,RegDist*3,RegDist*2,RegDist/1.5,RegDist/1.5,RegDist*2,RegDist*3,RegDist*4,RegDist*5,
            RegDist*5,RegDist*4,RegDist*3,RegDist*2,RegDist/1.5,RegDist/1.5,RegDist*2,RegDist*3,RegDist*4,RegDist*5))
    
    File=table(table(90,90,90,90,90,90,90,90,90,90,270,270,270,270,270,270,270,270,270,270),
        table(RegDist*10,RegDist*9,RegDist*8,RegDist*7,RegDist*6,RegDist*5,RegDist*4,RegDist*3,RegDist*2,RegDist/1.5,
            RegDist*10,RegDist*9,RegDist*8,RegDist*7,RegDist*6,RegDist*5,RegDist*4,RegDist*3,RegDist*2,RegDist/1.5))
            
    Column = table(table(0,180,180,180),table(RegDist/2,(RegDist/2),RegDist,(RegDist*1.5)))
}

interval(I)
Owner = owner()
OwnerPos = Owner:pos()
Dead = noentity()
if (SetNPCs) {NPCs = NPCList}

Angle=0

if (FormNum==0) {
    Formation=DoubleFile[3,string]
    Angles=DoubleFile[1,table]
    Dists=DoubleFile[2,table]
}
elseif (FormNum==1) {
    Formation=File[3,string]
    Angles=File[1,table]
    Dists=File[2,table]
}

if (Go==1) {
    NPCID = NPCs[C,number]
    NPC = entity(NPCID)
    NPC:npcRelationship("player","neutral",900)
    NPC:npcRelationship(Owner,"like",999)
    NPCPos = NPC:pos()
    
    if (C>10) {Line=2}
    else {Line=1}
    P1a=Angles[C,number]+Angle
    D1=Dists[C,number]
    P1x=D1*cos(P1a)
    P1y=D1*sin(P1a)
    P1v=vec(P1x,P1y,0)
    if (Line==1 | FormNum==1) {P1=Pos+P1v}
    elseif (Line==2) {P1=Pos+P1v+vec(50,25,0)}
    
    DPos = NPC:pos() - P1
    
    WP = (DPos/10000)*600
    Dist=DPos:length()
    
    if (Dist>=600) {
        Nx = 0
        Ny = 0
        WalkPos = NPCPos-WP
    }
    else {WalkPos = P1}
    
    WD = NPCPos:distance(NPCPos-WP)
    if (Dist>75) {
        if (Quick) {NPC:npcGoRun(WalkPos)}
        else {NPC:npcGoWalk(WalkPos)}
    } 
}

C+=1
if (C>20) {C=1}



#[
RegDist=100
FormationNum=0
Angle=0
Data=table(
table(table(270,270,90,90),table(RegDist,(RegDist/4),(RegDist/4),RegDist),"LINE"),
table(table(0,180,180,180),table(RegDist/2,(RegDist/2),RegDist,(RegDist*1.5)),"COLUMN"),
table(table(30,280,80,330),table(RegDist,RegDist,RegDist,RegDist),"WEDGE"),
table(table(10,-30,30,-10),table(RegDist,RegDist,RegDist,RegDist),"SCREEN")
)

Form=Data[FormationNum+1,table]
Formation=Form[3,string]
Angles=Form[1,table]
Dists=Form[2,table]

P1a=Angles[1,number]+Angle
P2a=Angles[2,number]+Angle
P3a=Angles[3,number]+Angle
P4a=Angles[4,number]+Angle
D1=Dists[1,number]
D2=Dists[2,number]
D3=Dists[3,number]
D4=Dists[4,number]

P1x=D1*cos(P1a)
P1y=D1*sin(P1a)
P1v=vec(P1x,P1y,0)
P2x=D2*cos(P2a)
P2y=D2*sin(P2a)
P2v=vec(P2x,P2y,0)
P3x=D3*cos(P3a)
P3y=D3*sin(P3a)
P3v=vec(P3x,P3y,0)
P4x=D4*cos(P4a)
P4y=D4*sin(P4a)
P4v=vec(P4x,P4y,0)

P1=Pos+P1v
P2=Pos+P2v
P3=Pos+P3v
P4=Pos+P4v

]#


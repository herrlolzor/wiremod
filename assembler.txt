@name assembler
@inputs String:string Enter Up Down Save CS:wirelink
@outputs Error Cmd Arg1 Arg2 Line #A1:string A2:string A:string Space MemAddrS:string
@persist Str:string Prog:array
@trigger Enter Up Down Save
Code=742617000027
if (Up==1 & Line>0) {Line=Line-1}
elseif (Down==1) {Line=Line+1}


if (Enter==1) {Str=String
#CMD
if (Str:find("SET")!=0) {Cmd=1}
elseif (Str:find("ADD")!=0) {Cmd=2}
elseif (Str:find("SBT")!=0) {Cmd=3}
elseif (Str:find("EQL")!=0) {Cmd=4}
elseif (Str:find("LSEQL")!=0) {Cmd=5}
elseif (Str:find("MREQL")!=0) {Cmd=6}
elseif (Str:find("AND")!=0) {Cmd=7}
elseif (Str:find("OR")!=0) {Cmd=8}
elseif (Str:find("NND")!=0) {Cmd=9}
elseif (Str:find("IFGO")!=0) {Cmd=10}
elseif (Str:find("END")!=0) {Cmd=11}
elseif (Str:find("MUL")!=0) {Cmd=12}
elseif (Str:find("DIV")!=0) {Cmd=13}
elseif (Str:find("POW")!=0) {Cmd=14}
elseif (Str:find("SQRT")!=0) {Cmd=15}
elseif (Str:find("RUN")!=0) {Cmd=16}
elseif (Str:find("COS")!=0) {Cmd=17}
elseif (Str:find("SIN")!=0) {Cmd=18}
elseif (Str:find("NOT")!=0) {Cmd=19}
elseif (Str:find("GO")!=0) {Cmd=20}

elseif (Str:find("OUT")!=0) {Cmd=22}
elseif (Str:find("SET2LOP")!=0) {Cmd=23}

elseif (Str:find("CLR")!=0) {Cmd=25}
elseif (Str:find("MRTN")!=0) {Cmd=26}
elseif (Str:find("LSTN")!=0) {Cmd=27}
else {Cmd=0
Error=1}


#CMD

#ARGUMENTS
A13L=(Cmd!=5 & Cmd!=6 & Cmd!=10 & Cmd!=15 & Cmd!=23 & Cmd!=26 & Cmd!=27)
A14L=(A13L==0 & Cmd!=23)
A15L=(A13L==0 & A13L==0 & Cmd!=0)
Len=Str:length()
if (A13L==1) {A=Str:sub(4)
    Space=A:find(" ")
    A1=A:sub(1,Space-1)
    A2=A:sub(Space)
}
elseif (A14L==1) {A=Str:sub(6)
    Space=A:find(" ")
    A1=A:sub(1,Space-1)
    A2=A:sub(Space)
}
elseif (A15L==1) {A=Str:sub(7)
    Space=A:find(" ")
    A1=A:sub(1,Space-1)
    A2=A:sub(Space)
}

#ARG1
MemC=A1:find("MEM")
LOP=A1:find("LOP")
if (MemC!=0) {MemAddrS=A1:sub(4)
    MemAddr=MemAddrS:toNumber()
    MemCode=MemAddr+Code
    Arg1=MemCode
}
elseif (LOP!=0) {Arg1=Code}
else {Arg1=A1:toNumber()}

#ARG2
MemC=A2:find("MEM")
LOP=A2:find("LOP")
if (MemC!=0) {MemAddrS=A2:sub(4)
    MemAddr=MemAddrS:toNumber()
    MemCode=MemAddr+Code
    Arg2=MemCode
}
elseif (LOP!=0) {Arg2=Code}
else {Arg2=A2:toNumber()}

}

#if (Save==1) {
#    Inst=array(Cmd,Arg1,Arg2)
#    Prog[Line,array]=Inst
#}

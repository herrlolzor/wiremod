@name Bombcomp
@inputs On Target:entity
@outputs Distance Bearing Elevation WR AR Alt Speed BRA
# @outputs FallV Time NAlt Dc Accel2 Trail HorV
@persist Accel Time Alt FallV NAlt Dc Accel2 Trail HorV
if (On!=1) {reset()}

runOnTick(1)
Gl=-4380
EE=entity()
Alt=EE:pos():z()+4380
TV=Target:pos()
Speed=entity():vel():length()
V=EE:velL():z()
#Base = Perpenticular^2 - Height^2 Squared

Dist=EE:pos():distance(TV)
B1=entity():pos():z()
B2=B1-(TV:z())
B3=Dist^2 - B2^2
Range=sqrt(B3)

Bearing=EE:bearing(TV)
Elevation=EE:elevation(TV)
Accel=(V-gravity())/66.657
Accel2=(V-gravity() - Dc)/66.657 #mk82

NAlt=Alt+FallV
TT=(Alt/Accel)/66.657 #)*1.2
Time=(TT-TT-TT)
Dc=((8.182056* Speed^2 *0.5)/500) /66.657

Trail=Dc*Time
FallV=(Accel*Time)
HorV=Speed-Trail
WR=(Speed-HorV)*Time
AR=WR-Trail
BRA=atan((AR/Alt))
Distance=Dist-AR


#Drag = Universaldragcoefficient * Area * Airdensity * Velocity:length()^2 * -Velocity:normalized()
# using the drag equation; Force = C * A * p * v^2, and then sign convention means it opposes velocity
#Acceleration = vec(0, 0, -gravity()) + (Drag / Target:mass())

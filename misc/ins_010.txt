@name INS 010 by the Baron Von Lolzor
@inputs AddrRead AddrWrite DataX DataY DataZ Clk Reset Alt
@outputs X Y Z Knots Speed Dist Go Hit
@persist Go GPS:vector Gx Py Sz Table1:table Table2:table Table3:table Alt

interval(100)
Alt=4000

if (Clk & ~Clk) {Table1[toString(AddrWrite),number] = DataX}
if (Clk & ~Clk) {Table2[toString(AddrWrite),number] = DataY}
if (Clk & ~Clk) {Table3[toString(AddrWrite),number] = DataZ}
Tx=Table1[toString(AddrRead),number]
Ty=Table2[toString(AddrRead),number]
Tz=Table3[toString(AddrRead),number]

Go=AddrRead <= 5
GPS=entity():pos()
Gx=GPS:x()
Py=GPS:y()
Sz=GPS:z()
X=Gx - Tx
Y=Py - Ty
Z=Sz - Tz - Alt
Dist=X + Y + Z
Knots=toUnit("knots", entity():vel():length() )
Speed=entity():vel():length()

if ((Dist<750) | (Dist>-750)) {Hit=1} 
if ((Dist>750) | (Dist< -750)) {Hit=0}


# AddRead must be wired to an Up/Down counter gate, Wich the Increment is wired to Hit.
# AddWrite must be wired to the device wich will feed it the Waypoints GPS parameters, telling it on wich one
# DataX,Y and Z must be wired to your GPS-coord-memory device
# Alt is wired to a constant value or advanced input to feed the Altitude of flight. Important.
# X,Y,Z is for vector thrusters
# Outputs Knots, Speed and Dist are simply for information
# A relay is wired to Go with an advanced input, to send it off. Thruster's Mult variables are wired to the relay

@name HARD drive
@inputs On WJob:vector RJob:vector HeadA:wirelink HeadB:wirelink HeadC:wirelink
@outputs Full WJobNumA WJobNumB WJobNumC RJobNumA RJobNumB RJobNumC Angle W1 W2 W3 WD1 WD2 WD3 
@outputs R1 R2 R3 RD1 RD2 RD3 Raddr1 Raddr2 Raddr3 Timer
@persist Timer Za WJobs:table WJobsA:table WJobsB:table WJobsC:table Cr1:table Cr2:table
@persist WJobNumA WJobNumB WJobNumC RJobs:table RJobsA:table RJobsB:table RJobsC:table 
@trigger None
interval(50)
Speed=75
S1=HeadA["Sector",number]
S2=HeadB["Sector",number]
S3=HeadC["Sector",number]

#WRITE JOB
if (WJob!=(vec(0,0,0))) {
    Jaddr=WJob:x()
    if (Jaddr==1) {JobNum=WJobNumA}
    elseif (Jaddr==2) {JobNum=WJobNumB}
    elseif (Jaddr==3) {JobNum=WJobNumC}
    if (JobNum<6) {
            if (Jaddr==1) {WJobsA[JobNum+1,vector]=WJob
            WJobNumA=JobNum+1
            WJobs[Jaddr,table]=WJobsA
            }
            if (Jaddr==2) {WJobsB[JobNum+1,vector]=WJob
            WJobNumB=JobNum+1
            WJobs[Jaddr,table]=WJobsB
            }
            if (Jaddr==3) {WJobsC[JobNum+1,vector]=WJob
            WJobNumC=JobNum+1
            WJobs[Jaddr,table]=WJobsC
            }
        }
}

#READ JOB
if (RJob!=(vec(0,0,0))) {
    Jaddr=RJob:x()
    if (Jaddr==1) {JobNum=RJobNumA}
    elseif (Jaddr==2) {JobNum=RJobNumB}
    elseif (Jaddr==3) {JobNum=RJobNumC}
    if (JobNum<6) {
            if (Jaddr==1) {RJobsA[JobNum+1,vector]=RJob
            RJobNumA=JobNum+1
            RJobs[Jaddr,table]=RJobsA
            }
            if (Jaddr==2) {RJobsB[JobNum+1,vector]=RJob
            RJobNumB=JobNum+1
            RJobs[Jaddr,table]=RJobsB
            }
            if (Jaddr==3) {RJobsC[JobNum+1,vector]=RJob
            RJobNumC=JobNum+1
            RJobs[Jaddr,table]=RJobsC
            }
        }
}

if (On==1) {
    Timer=Timer+0.02
    Angle=Timer*Speed
    if (Angle>36000) {Timer=0}
    
    #WRITE 
    Wj1=(WJobsA[1,vector]):y()
    Wj2=(WJobsB[1,vector]):y()
    Wj3=(WJobsC[1,vector]):y()
    WjobA=(WJobsA[1,vector]):z()
    WjobB=(WJobsB[1,vector]):z()
    WjobC=(WJobsC[1,vector]):z()
    if (S1==Wj1 & Wj1>0 & WjobA>0) {WD1=WjobA
        WJobsA:shift()
        WJobNumA=WJobNumA-1
        W1=1}
    else {W1=0
    WD1=0}    
    if (S2==Wj2 & Wj1>0 & WjobB>0) {WD2=WjobB
        WJobsB:shift()
        WJobNumB=WJobNumB-1
        W2=1}
    else {W2=0
    WD2=0} 
    if (S3==Wj3 & Wj3>0 & WjobC>0) {WD3=WjobC
        WJobsC:shift()
        WJobNumC=WJobNumC-1
        W3=1}
    else {W3=0
    WD3=0} 
    
    #READ
    Rj1=(RJobsA[1,vector]):y()
    Rj2=(RJobsB[1,vector]):y()
    Rj3=(RJobsC[1,vector]):y()
    if (S1==Rj1 & Rj1>0) {
        R1=1
        RJobsA:shift()
        RD1=HeadA["Data",number]
        Cr1[1,number]=Rj1
        Cr2[1,number]=RD1
        RJobNumA=RJobNumA-1}
    else {R1=0}    
    if (S2==Rj2 & Rj2>0) {
        R2=1
        RJobsB:shift()
        RD2=HeadB["Data",number]
        Cr1[2,number]=Rj2
        Cr2[2,number]=RD2
        RJobNumB=RJobNumB-1}
    else {R2=0} 
    if (S3==Rj3 & Rj3>0) {
        R3=1
        RJobsC:shift()
        RD3=HeadC["Data",number]
        Cr1[3,number]=Rj3
        Cr2[3,number]=RD3
        RJobNumC=RJobNumC-1}
    else {R3=0} 
    
    }
else {Timer=Timer}
Raddr1=Cr1[1,number]
Raddr2=Cr1[2,number]
Raddr3=Cr1[3,number]
RD1=Cr2[1,number]
RD2=Cr2[2,number]
RD3=Cr2[3,number]

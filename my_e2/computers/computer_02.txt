@name computer 02
@inputs KeyMem Data KBclk Pclk Pselect Clk Command:string CS:wirelink
@outputs DataA DataB Choice ProgChoice Progvalue DataChoice 
@persist Clk1 Clk2 Clk3 P1 In
@persist RAM1:table RAM2:table RAM3:table ROM:table Out
@persist Select1:table PC:table Program:table Math 

interval(250)
###KEYBOARD INPUT
S1=toChar(KeyMem)
Keyin=S1:toNumber()
if (KBclk & ~KBclk) {Select1[toString(0),number] = Keyin}
Choice=Select1[toString(0),number]

###USER INTERFACE AND CONSOLE SCREEN
ProgChoice=P1
Progvalue=Program[toString(P1),number]
DA=toString(DataA)
DB=toString(DataB)
C=toString(Choice)
PV=toString(Progvalue)
DC=toString(DataChoice) 
ProgC=toString(ProgChoice)
A="NEG-OS COMPUTER"
B="0.02"
C="DATA CHOICE   "+DC
D="DATA A        "+DA
E="DATA B        "+DB
F="PROG CHOICE   "+ProgC
G="PROG VALUE    "+PV
H="CHOICE        "+C
CS:writeString(A,1,0)
CS:writeString(B,22,0)
CS:writeString(C,1,2)
CS:writeString(D,1,4)
CS:writeString(E,1,6)
CS:writeString(F,1,8)
CS:writeString(G,1,10)
CS:writeString(H,1,12)

###FUNCTION CHOICE
if (Pselect & ~Pselect) {PC[toString(0),number] = Choice}
P1=PC[toString(0),number]

###COMMAND RECOGNITION
PP1=Command:sub(0,1)
PP2=Command:sub(2,2)
PN2=PP2:toNumber()
PP3=Command:sub(3,3)
PN3=PP3:toNumber()
PP4=Command:sub(4)
PN4=PP4:toNumber()
C1=Command:sub(0,2)
C2=Command:sub(3,3)
CC3=Command:sub(4)
C3=CC3:toNumber()

###FUNCTION INPUT
if (Pclk & ~Pclk) {Program[toString(P1),number] = Choice}

###INPUT ADDRESSES
AddrRead=Program[toString(1),number]
AddrWrite=Program[toString(2),number]
RAMselect=Program[toString(3),number]
InChoice=Program[toString(4),number]
DataChoice=Program[toString(5),number]
Outselect=Program[toString(6),number]

###DATA INPUT
if (InChoice==0) {In=Data}
elseif (InChoice==1) {In=DataA}
elseif (InChoice==2) {In=Out}
if (Clk & ~Clk & RAMselect==1) {RAM1[toString(AddrWrite),number] = In}
if (Clk & ~Clk & RAMselect==2) {RAM2[toString(AddrWrite),number] = In}
if (Clk & ~Clk & RAMselect==3) {RAM3[toString(AddrWrite),number] = In}

###DATA OUTPUT
if (Outselect==1) {DataA=RAM1[toString(AddrRead),number]}
elseif (Outselect==2) {DataA=RAM2[toString(AddrRead),number]}
elseif (Outselect==3) {DataA=RAM3[toString(AddrRead),number]}
else {DataA=404}

################PROGRAMS
###DATA RETRIEVE PROGRAM
if ((C1=="dr") & (C2=="1")) {DataB=RAM1[toString(C3),number]}
elseif ((C1=="dr") & (C2=="2")) {DataB=RAM2[toString(C3),number]}
elseif ((C1=="dr") & (C2=="3")) {DataB=RAM3[toString(C3),number]}
else {DataB=404}

###CALCULATE DATA PROGRAM
if ((PP1=="c") & (PP2=="1")) {ROM[toString(0),number] = RAM1[toString(PN4),number] - ROM[toString(0),number]}
if ((PP1=="c") & (PP2=="2")) {ROM[toString(0),number] = RAM2[toString(PN4),number] - ROM[toString(0),number]}
if ((PP1=="c") & (PP2=="3")) {ROM[toString(0),number] = RAM3[toString(PN4),number] - ROM[toString(0),number]}
if ((PP1=="C") & (PP2=="1")) {ROM[toString(0),number] = DataA - ROM[toString(0),number]}
if ((PP1=="C") & (PP2=="2")) {ROM[toString(0),number] = DataA + ROM[toString(0),number]}
if ((PP1=="C") & (PP2=="3")) {ROM[toString(0),number] = DataA * ROM[toString(0),number]}
if ((PP1=="C") & (PP2=="4")) {ROM[toString(0),number] = DataA / ROM[toString(0),number]}
